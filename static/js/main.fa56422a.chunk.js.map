{"version":3,"sources":["components/TriviaGame.js","components/Home.js","App.js","index.js"],"names":["Game","useState","ques","setQues","input","setInput","score","setScore","count","setCount","error","setError","showGameOver","setShowGameOver","useEffect","fetch","then","res","json","item","className","question","onClick","console","log","answer","type","value","onChange","e","target","preventDefault","b","Home","navigate","useNavigate","App","path","element","exact","rootElement","document","getElementById","createRoot","render"],"mappings":"mPAIe,SAASA,IACtB,MAAwBC,mBAAS,IAAjC,mBAAOC,EAAP,KAAaC,EAAb,KACA,EAA0BF,mBAAS,IAAnC,mBAAOG,EAAP,KAAcC,EAAd,KACA,EAA0BJ,mBAAS,GAAnC,mBAAOK,EAAP,KAAcC,EAAd,KACA,EAA0BN,mBAAS,GAAnC,mBAAOO,EAAP,KAAcC,EAAd,KACA,EAA0BR,mBAAS,IAAnC,mBAAOS,EAAP,KAAcC,EAAd,KACA,EAAwCV,oBAAS,GAAjD,mBAAOW,EAAP,KAAqBC,EAArB,KAsBA,OAPAC,qBAAU,WACRC,MAAM,kCACHC,MAAK,SAACC,GAAD,OAASA,EAAIC,UAClBF,MAAK,SAACG,GACLhB,EAAQgB,EAAK,SAEhB,CAACX,IAEF,mCACa,IAAVA,IAA0B,KAAXF,EACdM,GACE,cAAC,IAAD,CACEN,MAAOA,EACPC,SAAUA,EACVE,SAAUA,EACVI,gBAAiBA,EACjBF,SAAUA,IAId,sBAAKS,UAAU,OAAf,UACE,4BACE,6BACE,8BACE,iCACG,IACD,sCAEDlB,EAAKmB,gBAIZ,gCACE,8BACE,mBACEC,QAAS,WACPC,QAAQC,IAAItB,EAAKuB,SAFrB,yBAOA,uBACEC,KAAK,OACLC,MAAOvB,EACPwB,SAAU,SAACC,GACTxB,EAASwB,EAAEC,OAAOH,eAK1B,qBAAKP,UAAU,SAAf,SACE,wBACEM,KAAK,SACLN,UAAU,SACVE,QAAS,SAACO,GACRA,EAAEE,iBAnEE7B,EAAKuB,OAAOO,IACZ5B,GAEdK,EAASD,EAAQ,GACjBG,EAAS,IACTJ,EAASD,EAAQ,MAEjBK,EAAS,gBACTJ,EAASD,EAAQ,IA6DPD,EAAS,KANb,sBAYF,qBAAKe,UAAU,QAAf,SACE,4BAAIV,GAAgB,SAEtB,gCACE,uCACA,sBAAMU,UAAU,QAAhB,SAAyBd,Y,MCzFtB,SAAS2B,IACtB,IAAIC,EAAWC,cACf,OACE,sBAAKf,UAAU,OAAf,UACE,oBAAIA,UAAU,UAAd,yBACA,6BACE,wEAEF,wBACEA,UAAU,eACVE,QAAS,WACPY,EAAS,UAHb,6BCNS,SAASE,IACtB,OACE,cAAC,IAAD,UACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAOC,KAAK,QAAQC,QAAS,cAACtC,EAAD,MAC7B,cAAC,IAAD,CAAOqC,KAAK,IAAIE,OAAK,EAACD,QAAS,cAACL,EAAD,WCNvC,IAAMO,EAAcC,SAASC,eAAe,QAC/BC,qBAAWH,GAEnBI,OACH,cAAC,aAAD,UACE,cAACR,EAAD,Q","file":"static/js/main.fa56422a.chunk.js","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport Gameover from \"./Gameover\";\nimport \"./triviagame.css\";\n\nexport default function Game() {\n  const [ques, setQues] = useState({});\n  const [input, setInput] = useState(\"\");\n  const [score, setScore] = useState(0);\n  const [count, setCount] = useState(0);\n  const [error, setError] = useState(\"\");\n  const [showGameOver, setShowGameOver] = useState(true);\n\n  function checkAns() {\n    let ansString = ques.answer.b;\n    let inpString = input;\n    if (ansString === inpString) {\n      setCount(count + 1);\n      setError(\"\");\n      setScore(score + 10);\n    } else {\n      setError(\"Wrong Answer\");\n      setScore(score - 5);\n    }\n  }\n\n  useEffect(() => {\n    fetch(\"https://jservice.io/api/random\")\n      .then((res) => res.json())\n      .then((item) => {\n        setQues(item[0]);\n      });\n  }, [count]);\n  return (\n    <>\n      {count === 5 || score === -20 ? (\n        showGameOver && (\n          <Gameover\n            score={score}\n            setScore={setScore}\n            setCount={setCount}\n            setShowGameOver={setShowGameOver}\n            setError={setError}\n          />\n        )\n      ) : (\n        <div className=\"game\">\n          <p>\n            <h1>\n              <b>\n                <span>\n                  {\" \"}\n                  <b>Q-</b>\n                </span>\n                {ques.question}\n              </b>\n            </h1>\n          </p>\n          <label>\n            <b>\n              <i\n                onClick={() => {\n                  console.log(ques.answer);\n                }}\n              >\n                Your answer\n              </i>\n              <input\n                type=\"text\"\n                value={input}\n                onChange={(e) => {\n                  setInput(e.target.value);\n                }}\n              />\n            </b>\n          </label>\n          <div className=\"button\">\n            <button\n              type=\"submit\"\n              className=\"submit\"\n              onClick={(e) => {\n                e.preventDefault();\n                checkAns();\n                setInput(\"\");\n              }}\n            >\n              Submit\n            </button>\n          </div>\n          <div className=\"error\">\n            <p>{error ? error : null}</p>\n          </div>\n          <div>\n            <p>Score:</p>\n            <span className=\"score\">{score}</span>\n          </div>\n        </div>\n      )}\n    </>\n  );\n}\n","import React from \"react\";\nimport { Link, useNavigate } from \"react-router-dom\";\nimport \"./home.css\";\n\nexport default function Home() {\n  let navigate = useNavigate();\n  return (\n    <div className=\"home\">\n      <h1 className=\"heading\">Trivia Game</h1>\n      <h4>\n        <i> Type the answer for given questions </i>\n      </h4>\n      <button\n        className=\"start-button\"\n        onClick={() => {\n          navigate(\"/game\");\n        }}\n      >\n        Start Button\n      </button>\n    </div>\n  );\n}\n","import React from \"react\";\nimport { BrowserRouter, Route, Routes } from \"react-router-dom\";\nimport \"./styles.css\";\nimport Game from \"./components/TriviaGame\";\nimport Home from \"./components/Home\";\n\nexport default function App() {\n  return (\n    <BrowserRouter>\n      <Routes>\n        <Route path=\"/game\" element={<Game />}></Route>\n        <Route path=\"/\" exact element={<Home />}></Route>\n      </Routes>\n    </BrowserRouter>\n  );\n}\n","import { StrictMode } from \"react\";\nimport { createRoot } from \"react-dom/client\";\n\nimport App from \"./App\";\n\nconst rootElement = document.getElementById(\"root\");\nconst root = createRoot(rootElement);\n\nroot.render(\n  <StrictMode>\n    <App />\n  </StrictMode>\n);\n"],"sourceRoot":""}